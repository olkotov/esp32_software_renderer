// Oleg Kotov

#include "mesh.h"
#include "utils.h"

Mesh createCubeMesh()
{
    Mesh mesh;

    // Определение вершин куба
    std::vector<Vertex> vertices = {
        
        // верхняя сторона
        // green
        { {-0.5, -0.5,  0.5}, {0, 0, 1}, {0, 0}, { 0 / 255.0f, 255 / 255.0f, 127 / 255.0f } }, // 0
        { { 0.5, -0.5,  0.5}, {0, 0, 1}, {1, 0}, { 0 / 255.0f, 255 / 255.0f, 127 / 255.0f } }, // 1
        { { 0.5,  0.5,  0.5}, {0, 0, 1}, {1, 1}, { 0 / 255.0f, 255 / 255.0f, 127 / 255.0f } }, // 2
        { {-0.5,  0.5,  0.5}, {0, 0, 1}, {0, 1}, { 0 / 255.0f, 255 / 255.0f, 127 / 255.0f } }, // 3

        // нижняя сторона
        // red
        { { 0.5, -0.5, -0.5}, {0, 0,-1}, {0, 0}, { 255 / 255.0f, 99 / 255.0f, 71 / 255.0f } }, // 4
        { {-0.5, -0.5, -0.5}, {0, 0,-1}, {1, 0}, { 255 / 255.0f, 99 / 255.0f, 71 / 255.0f } }, // 5
        { {-0.5,  0.5, -0.5}, {0, 0,-1}, {1, 1}, { 255 / 255.0f, 99 / 255.0f, 71 / 255.0f } }, // 6
        { { 0.5,  0.5, -0.5}, {0, 0,-1}, {0, 1}, { 255 / 255.0f, 99 / 255.0f, 71 / 255.0f } }, // 7

        // задняя сторона
        // blue
        { {-0.5,  0.5,  0.5}, {0, 1, 0}, {0, 0}, { 157 / 255.0f, 148 / 255.0f, 254 / 255.0f } }, // 8
        { { 0.5,  0.5,  0.5}, {0, 1, 0}, {1, 0}, { 157 / 255.0f, 148 / 255.0f, 254 / 255.0f } }, // 9
        { { 0.5,  0.5, -0.5}, {0, 1, 0}, {1, 1}, { 157 / 255.0f, 148 / 255.0f, 254 / 255.0f } }, // 10
        { {-0.5,  0.5, -0.5}, {0, 1, 0}, {0, 1}, { 157 / 255.0f, 148 / 255.0f, 254 / 255.0f } }, // 11

        // лицевая сторона
        // yellow
        { {-0.5, -0.5, -0.5}, {0,-1, 0}, {0, 0}, { 255 / 255.0f, 215 / 255.0f, 0 / 255.0f } }, // 12
        { { 0.5, -0.5, -0.5}, {0,-1, 0}, {1, 0}, { 255 / 255.0f, 215 / 255.0f, 0 / 255.0f } }, // 13
        { { 0.5, -0.5,  0.5}, {0,-1, 0}, {1, 1}, { 255 / 255.0f, 215 / 255.0f, 0 / 255.0f } }, // 14
        { {-0.5, -0.5,  0.5}, {0,-1, 0}, {0, 1}, { 255 / 255.0f, 215 / 255.0f, 0 / 255.0f } }, // 15

        // правая сторона
        // pink
        { { 0.5, -0.5,  0.5}, {1, 0, 0}, {0, 0}, { 249 / 255.0f, 136 / 255.0f, 183 / 255.0f } }, // 16
        { { 0.5, -0.5, -0.5}, {1, 0, 0}, {1, 0}, { 249 / 255.0f, 136 / 255.0f, 183 / 255.0f } }, // 17
        { { 0.5,  0.5, -0.5}, {1, 0, 0}, {1, 1}, { 249 / 255.0f, 136 / 255.0f, 183 / 255.0f } }, // 18
        { { 0.5,  0.5,  0.5}, {1, 0, 0}, {0, 1}, { 249 / 255.0f, 136 / 255.0f, 183 / 255.0f } }, // 19

        // левая сторона
        // orange  
        { {-0.5, -0.5, -0.5}, {-1, 0, 0}, {0, 0}, { 243 / 255.0f, 184 / 255.0f, 81 / 255.0f } }, // 20
        { {-0.5, -0.5,  0.5}, {-1, 0, 0}, {1, 0}, { 243 / 255.0f, 184 / 255.0f, 81 / 255.0f } }, // 21
        { {-0.5,  0.5,  0.5}, {-1, 0, 0}, {1, 1}, { 243 / 255.0f, 184 / 255.0f, 81 / 255.0f } }, // 22
        { {-0.5,  0.5, -0.5}, {-1, 0, 0}, {0, 1}, { 243 / 255.0f, 184 / 255.0f, 81 / 255.0f } }  // 23
    };

    // Определение треугольников куба
    std::vector<Triangle> triangles = {
        // лицевая сторона
        {0, 1, 2}, {2, 3, 0},

        // задняя сторона
        {4, 5, 6}, {6, 7, 4},

        // верхняя сторона
        {8, 9, 10}, {10, 11, 8},

        // нижняя сторона
        {12, 13, 14}, {14, 15, 12},

        // правая сторона
        {16, 17, 18}, {18, 19, 16},

        // левая сторона
        {20, 21, 22}, {22, 23, 20}
    };

    // Заполнение структуры Mesh
    mesh.vertices = vertices;
    mesh.triangles = triangles;

    return mesh;
}

Mesh createTriangleMesh()
{
    Mesh mesh;

    // Определение вершин треугольника
    std::vector<Vertex> vertices = {
        // лицевая сторона
        { { -0.5, 0.0f, -0.5 }, { 0, -1, 0 }, { 0, 0 }, { 0, 1.0f, 0 } }, // 0
        { {  0.5, 0.0f, -0.5 }, { 0, -1, 0 }, { 1, 0 }, { 0, 1.0f, 0 } }, // 1
        { {  0.0, 0.0f,  0.5 }, { 0, -1, 0 }, { 1, 1 }, { 0, 1.0f, 0 } }  // 2
    };

    // Определение треугольников треугольника
    std::vector<Triangle> triangles = {
        // лицевая сторона
        {0, 1, 2}
    };

    // Заполнение структуры Mesh
    mesh.vertices = vertices;
    mesh.triangles = triangles;

    return mesh;
}

